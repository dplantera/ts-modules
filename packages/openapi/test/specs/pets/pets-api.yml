openapi: "3.1.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
    url: http://petstore.swagger.io/v1
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                $ref: '#/components/schemas/Pets'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Pet"

    Pet:
      oneOf:
        - $ref: '#/components/schemas/Cat'
        - $ref: '#/components/schemas/Dog'
      discriminator:
        propertyName: type
        mapping:
          DOG: '#/components/schemas'
          CAT: '#/components/schemas/Dog'

    PetBase:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        name:
          type: string
        tag:
          type: string
      discriminator:
        propertyName: type

    Cat:
      allOf:
        - $ref: '#/components/schemas/PetBase'
        - properties:
            color:
              type: string
          required: [ color ]

    Dog:
      allOf:
        - $ref: '#/components/schemas/PetBase'
        - properties:
            bark:
              type: string
          required: [ bark ]

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string





